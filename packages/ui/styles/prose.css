:root {
  --prosemirror-color-gray: #71717a;
  --prosemirror-color-red: #dc2626;
  --prosemirror-color-orange: #f97316;
  --prosemirror-color-yellow: #eab308;
  --prosemirror-color-green: #22c55e;
  --prosemirror-color-blue: #3b82f6;
  --prosemirror-color-selection: #90baf8;
  --prosemirror-block-gap: 1rem;
}

.ProseMirror {
  line-height: 1.6;

  /* gray.1000 */
  caret-color: #09090b;

  & > * + *,
  & [data-node-view-content-editable] > * + *, /* callout ë“± */
  & [data-node-view-content-editable] > [role='tabpanel'] > * + * /* tabs */ {
    margin-top: var(--prosemirror-block-gap);
  }

  & > * + h2,
  & > * + .block-selection-decoration:has(> h2) {
    margin-top: calc(var(--prosemirror-block-gap) + 26px * 1);
  }

  & > * + h3,
  & > * + .block-selection-decoration:has(> h3) {
    margin-top: calc(var(--prosemirror-block-gap) + 22px * 0.75);
  }

  & > * + h4,
  & > * + .block-selection-decoration:has(> h4) {
    margin-top: calc(var(--prosemirror-block-gap) + 18px * 0.5);
  }

  & [data-color='gray'] {
    color: var(--prosemirror-color-gray);
  }

  & [data-color='red'] {
    color: var(--prosemirror-color-red);
  }

  & [data-color='orange'] {
    color: var(--prosemirror-color-orange);
  }

  & [data-color='yellow'] {
    color: var(--prosemirror-color-yellow);
  }

  & [data-color='green'] {
    color: var(--prosemirror-color-green);
  }

  & [data-color='blue'] {
    color: var(--prosemirror-color-blue);
  }

  &[contenteditable='true'] {
    & [data-drag-handle] {
      cursor: grab;
    }
  }

  table {
    border-collapse: collapse;
    table-layout: fixed;
    width: 100%;
  }

  td,
  th {
    vertical-align: top;
    box-sizing: border-box;
    position: relative;
  }

  li:not([role='tab']) {
    margin-top: 4px;

    &:first-child {
      margin-top: 0;
    }
  }

  :is(ul, ol) :is(ul, ol) li:not([role='tab']):first-child {
    margin-top: 4px;
  }

  .column-resize-handle {
    position: absolute;
    right: -2px;
    top: -1px;
    bottom: -1px;
    width: 4px;
    z-index: 5;
    background-color: var(--prosemirror-color-selection);
    cursor: ew-resize;
    cursor: col-resize;
  }

  .selectedCell {
    background-color: color-mix(in srgb, var(--prosemirror-color-selection) 14%, transparent);
  }
}

.ProseMirror-hideselection {
  caret-color: transparent;

  & *::selection {
    display: none;
  }
}

.ProseMirror-separator {
  display: inline-block;
}
